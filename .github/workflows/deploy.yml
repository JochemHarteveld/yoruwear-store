name: ðŸš€ Deploy YoruWear Store to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'
  BUN_VERSION: 'latest'
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

jobs:
  # Build and test the frontend
  frontend-build:
    name: Build Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install client dependencies
        run: |
          cd client
          npm ci --no-audit --no-fund

      - name: Lint client code
        run: |
          cd client
          npm run lint

      - name: Build client for GitHub Pages
        run: |
          cd client
          npm run build -- --configuration github-pages

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: client/dist/client/browser/
          retention-days: 1

  # Build and test the backend
  backend-build:
    name: Build Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install server dependencies
        run: |
          cd server
          bun install --production

      - name: Lint server code  
        run: |
          cd server
          bun run lint

      # Note: No build step needed here - Railway will build using Docker

  # Deploy frontend to GitHub Pages
  deploy-frontend:
    name: Deploy Frontend to GitHub Pages
    needs: frontend-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # Grant GITHUB_TOKEN permissions to deploy to Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    
    # Allow only one concurrent deployment
    concurrency:
      group: "pages"
      cancel-in-progress: false
    

    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: ./dist

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Deploy backend to Railway
  deploy-backend:
    name: Deploy Backend to Railway
    needs: backend-build
    runs-on: ubuntu-latest
    container: ghcr.io/railwayapp/cli:latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      SVC_ID: yoruwear-api
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway (Server)
        working-directory: ./server
        run: |
          echo "ðŸš€ Deploying YoruWear API to Railway..."
          railway up --service=yoruwear-api
          echo "âœ… Railway deployment completed!"